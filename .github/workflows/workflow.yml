name: Lint, Format, Test, Build, and Publish

on:
  push:
    branches:
      - master  # Adjust the branch name as needed

permissions:
  contents: write  # Grants write access to repository contents
  id-token: write   # Required for environments that use OpenID Connect

jobs:
  lint-and-format:
    name: Lint and Format Code
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]  # Specify the Python versions you want to test against

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to push changes back

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install isort ruff packaging build

      - name: Sort Imports with isort
        run: isort ./funcversion

      - name: Format Code with Ruff
        run: ruff format ./funcversion

      - name: Lint Code with Ruff
        run: ruff check ./funcversion

      - name: Commit Formatted Code
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add ./funcversion
          if ! git diff --cached --quiet; then
            git commit -m "Apply formatting changes with Ruff and isort [skip ci]"
            git push
          else
            echo "No formatting changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-format  # Ensures this job runs after lint-and-format succeeds

    strategy:
      matrix:
        python-version: ["3.11"]  # Specify the Python versions you want to test against

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false --local
          poetry install --all-extras

      - name: Run Tests with pytest
        run: pytest tests

  build-and-publish:
    name: Build and Publish to PyPI
    needs: test  # Ensures this job runs after the test job succeeds
    runs-on: ubuntu-latest
    environment: pypi  # Associates this job with the 'pypi' environment

    permissions:
      id-token: write
      contents: read  # Grants read access to repository contents

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Build Tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build Package
        run: python -m build

      - name: Publish Package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
